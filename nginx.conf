events {
    worker_connections  1024;
    # worker_processes and worker_connections allows you to calculate maxclients value: 
    # max_clients = worker_processes * worker_connections
}

http {
  upstream backend {
      server web:8000 fail_timeout=0;
  }

  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=CACHE:10m inactive=7d max_size=1g;

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!MEDIUM:!LOW:!aNULL:!NULL:!SHA;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    # Replace with your real certificate!
    ssl_certificate     /etc/nginx/cert.pem;
    ssl_certificate_key /etc/nginx/key.pem;

    listen 80;
    listen 8081;
    listen 8082;
    listen 8083;
    listen 8084;
    server_name _ default_server;

    keepalive_timeout    70;
    sendfile             on;
    client_max_body_size 80m;

    #root /home/mastodon/live/public;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    #add_header Strict-Transport-Security "max-age=31536000";

    location / {
      try_files $uri @proxy;
    }

    #location ~ ^/(emoji|packs|system/accounts/avatars|system/media_attachments/files) {
    #  add_header Cache-Control "public, max-age=31536000, immutable";
    #  add_header Strict-Transport-Security "max-age=31536000";
    #  try_files $uri @proxy;
    #}

    #location /sw.js {
    #  add_header Cache-Control "public, max-age=0";
    #  add_header Strict-Transport-Security "max-age=31536000";
    #  try_files $uri @proxy;
    #}

    location @proxy {
      set $host2 $host;
      if ($server_port = "8081") {
        set $host2 "commune1.localdomain";
      }
      if ($server_port = "8082") {
        set $host2 "commune2.localdomain";
      }
      if ($server_port = "8083") {
        set $host2 "commune3.localdomain";
      }
      if ($server_port = "8084") {
        set $host2 "commune4.localdomain";
      }
      proxy_set_header Host $host2;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Proxy "";
      proxy_pass_header Server;

      proxy_pass http://backend;
      proxy_buffering on;
      proxy_redirect off;
      proxy_http_version 1.1;
      #proxy_set_header Upgrade $http_upgrade;
      #proxy_set_header Connection $connection_upgrade;

      proxy_cache CACHE;
      proxy_cache_valid 200 7d;
      proxy_cache_valid 410 24h;
      proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
      add_header X-Cached $upstream_cache_status;
      add_header Strict-Transport-Security "max-age=31536000";

      tcp_nodelay on;
    }

    error_page 500 501 502 503 504 /500.html;
  }
}